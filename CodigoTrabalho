using System;
using System.IO.Ports;

public class RoboCarrinho
{
    static SerialPort serialPort;

    static void Main()
    {
        // Inicialização da comunicação com o Arduino
        serialPort = new SerialPort("COM3", 9600);
        serialPort.Open();

  
        while (true)
        {
            Console.WriteLine("Digite a instrução para o carrinho (frente, trás, parar, sair):");
            string instrucao = Console.ReadLine();

            if (instrucao == "frente")
            {
                MoverCarrinhoFrente();
            }
            else if (instrucao == "trás")
            {
                MoverCarrinhoTras();
            }
            else if (instrucao == "parar")
            {
                PararCarrinho();
            }
            else if (instrucao == "sair")
            {
                break;
            }
            else
            {
                Console.WriteLine("Instrução inválida!");
            }

            if (instrucao == "frente" || instrucao == "trás")
            {
                DescerSensor();
                LerDadosHumidade();
                SubirSensor();
            }
        }

        // fechamento da comunicação
        serialPort.Close();
    }

    static void MoverCarrinhoFrente()
    {
        // Envie o comando para o Arduino para mover o carrinho para frente
        serialPort.WriteLine("frente");
    }

    static void MoverCarrinhoTras()
    {
        // Envie o comando para o Arduino para mover o carrinho para trás
        serialPort.WriteLine("trás");
    }

    static void PararCarrinho()
    {
        // Envie o comando para o Arduino para parar o carrinho
        serialPort.WriteLine("parar");
    }

    static void DescerSensor()
    {
        // Envie o comando para o Arduino para descer o sensor
        serialPort.WriteLine("descer_sensor");
    }

    static void LerDadosHumidade()
    {
        // Envie o comando para o Arduino para ler os dados de umidade
        serialPort.WriteLine("ler_humidade");

        // Espere a resposta do Arduino
        string resposta = serialPort.ReadLine();

        // Processar os dados de umidade recebidos
        // Aqui você pode fazer o que quiser com os dados, como enviá-los para o computador
        Console.WriteLine("Dados de umidade: " + resposta);
    }

    static void SubirSensor()
    {
        // Envie o comando para o Arduino para subir o sensor
        serialPort.WriteLine("subir_sensor");
    }
}



//-------------------------------------------------------------------------------------------------------------

using System;
using System.IO.Ports;
using System.Windows;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        private SerialPort serialPort;

        public MainWindow()
        {
            InitializeComponent();

            // Configuração da comunicação serial
            serialPort = new SerialPort("COM3", 9600);
            serialPort.DataReceived += SerialPort_DataReceived;
            serialPort.Open();
        }

        private void SerialPort_DataReceived(object sender, SerialDataReceivedEventArgs e)
        {
            string dadosRecebidos = serialPort.ReadLine();
            double umidade;

            if (double.TryParse(dadosRecebidos, out umidade))
            {
                Dispatcher.Invoke(() =>
                {
                    // Atualiza a interface com os dados de umidade recebidos
                    textBoxDadosUmidade.AppendText("Dados de umidade recebidos: " + umidade.ToString("F2") + " %" + Environment.NewLine);
                });
            }
            else
            {
                Dispatcher.Invoke(() =>
                {
                    // Atualiza a interface com dados inválidos recebidos
                    textBoxDadosUmidade.AppendText("Dados inválidos recebidos: " + dadosRecebidos + Environment.NewLine);
                });
            }
        }

        protected override void OnClosed(EventArgs e)
        {
            base.OnClosed(e);

            if (serialPort != null)
            {
                serialPort.Close();
                serialPort.Dispose();
            }
        }
    }
}





//-----------------------------------------------------------------------------------------------------------------------------



<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="InterfaceHumidade" Height="450" Width="800">
    <Grid>
        <TextBox x:Name="textBoxDadosUmidade" HorizontalAlignment="Left" Height="400" Margin="10" VerticalAlignment="Top" Width="770" IsReadOnly="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto">
            <TextBox.Text>
                <!-- Dados de exemplo -->
                Dados de umidade recebidos: 25.50 %&#x0A;
                Dados de umidade recebidos: 35.20 %&#x0A;
                Dados inválidos recebidos: InvalidData&#x0A;
            </TextBox.Text>
        </TextBox>
    </Grid>
</Window>
